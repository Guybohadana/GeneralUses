from yahoo_fin.stock_info import *
import schedule
import time
import smtplib
# Prime details
sender_email = "Gu..@gmail.com"
rec_email = ['guy..@gmail.com','e..@gmail.com']
password = "xxx"

stock_1 = 'Ethereum-USD'
stock_2 = 'Catalent'

Purched_stock1 = 1300 
Purched_stock2 = 113

max_eth = 0
max_ctlt = 0
max_amd = 0
count = 0

price_ETH = (int(get_live_price("ETH-USD")))  #1
price_AMD = (int(get_live_price("AMD")))      #2

def Stock(price,max,purched,stock_name):
    global count,sender_email, rec_email, password
    count = count + 1

    if price > purched and price > purched*5/100+(purched) and price < purched*30/100+(purched) and count > 35:
        if max < price:
            max = price
        message = str(
        'Status - the ' + str(stock_name) + ' stock standing on ' + str(
        price) + '$, there is growth of 5% or more\n' + 'The maximum price of the stock is: ' + str(max) + '\nI will keep you updating bro')
        count = 0
        mail_send(message)

    if price > 35 * purched/100+(purched):
        message = str(
        'Hey! you should Sell the ' + str(stock_name) + ' right now\n\nthere is a profit over 35% \n\nThe ' + str(stock_name) + ' value is ' + str(
        price)+'$')
        count = 0
        mail_send(message)

    if count <= 40 and count>=43 and price > purched and price < 15*purched/100+(purched):
        message = str('There is no change with ' + str(stock_name) + 'the new price is ' + str(max))
        mail_send(message)
        count = 0

def mail_send(messages):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    msg = "Subject: Stock alert \n" +messages
    server.starttls()
    server.login(sender_email, password)
    print("email login success")
    server.sendmail(sender_email, rec_email, str(msg))
    print("email has been sent")

# stock 1  - ethereum
schedule.every(3).hours.do(Stock, price_ETH, max_eth, Purched_stock1, stock_1)

# Stock 3 - AMD
schedule.every(3).hours.do(Stock, price_AMD, max_amd, Purched_stock3, stock_3)

while True:
    schedule.run_pending()
    time.sleep(1)
